# Apex Class Code
public class AccountIndustryList {
    
    @auraenabled
    public static Map<String,String> getIndustryList()
    {
        Map<String,String> industryList = new Map<String,String>();
        SObjectType accountType = schema.getGlobalDescribe().get('Account');
        Map<String,Schema.SObjectField> mFields = accountType.getDescribe().fields.getMap();
        List<Schema.PicklistEntry> Industry_Picklist_Values = mFields.get('industry').getDescribe() .getPickListValues();
        for(Schema.PicklistEntry a : Industry_Picklist_Values )
        {
            industryList.put(a.getLabel(), a.getValue()); 
        }
         System.debug(industryList); 
        return industryList;
    }
     @auraenabled
    public static void createAccount(String name,String industry)
    {
        Account acc = new Account ();
        acc.Name = name;
        acc.Industry = industry;
        insert acc;
        system.debug('name : '+name+' & industry :'+industry);
    }
}


-----------------------------------------------------------------------------------
# Component File
<aura:component controller = "AccountIndustryList" implements="flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" >
    <aura:attribute name="options" type="list" />
    <aura:attribute name="selectedValue" type="String" />
    <aura:handler name="init" value="{!this}" action="{!c.init}" />
    <lightning:card>
        <lightning:input aura:id="accountName" label="Enter Account Name" />
        <lightning:select name="colorId" label="Select a color:" aura:id="industryId" value="{!v.selectedValue}">
            <aura:iteration items="{!v.options}" var="option">
                <option text="{!option.key}" value="{!option.value}" selected="{!option.selected}"/>
            </aura:iteration>
        </lightning:select>	
        <lightning:button variant="brand" label="Create Account" onclick="{!c.doCreateNewAccount}"/>
    </lightning:card>
</aura:component>
------------------------------------------------------------------------------------
# Controller File
({
    init : function(component, event, helper) {
        
        var action = component.get('c.getIndustryList');
        action.setCallback(this,function(response){
            var state = response.getState(); // get the response state
            console.log(state);
            if(state == 'SUCCESS') {
                var responsevalue = response.getReturnValue();
                
                console.log(responsevalue);
                var jsMap = [];
                for (var key in responsevalue)
                {
                    jsMap.push({
                        key:key,
                        value:responsevalue[key]
                    })   ;
                }
                component.set('v.options', jsMap);
                component.set('v.selectedValue',responsevalue[key]);
            }
        });
        $A.enqueueAction(action);
    },
    doCreateNewAccount : function(component, event, helper) {   
        
        var name = component.find('accountName').get('v.value');
        var industry = component.find('industryId').get('v.value');
        alert(industry);
    var action = component.get('c.createAccount');
        action.setParams({
            name : name,
            industry : industry
            
        });
    
    action.setCallback(this,function(response)
    {
      var states = response.getState();
        
         console.log(states);
        if(states == 'SUCCESS' )
        {
            component.find('accountName').set('Kratika');
        }
	});
	$A.enqueueAction(action);
}

})

